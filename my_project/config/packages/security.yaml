security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt
        Symfony\Component\Security\Core\User\User: bcrypt

    providers:
            chain_provider:
                chain:
                    providers: [in_memory, in_database]
            in_memory:
                memory:
                    users:
                        adminas@admin.com:
                            password: $2y$13$GokmxeAM1kEoQDumZG8H/uToGhhybsjn/FX.c7JuWtbvC6L77OpfO
                            roles: ['ROLE_ADMIN']
            in_database:
                entity: { class: App\Entity\User, property: username }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: chain_provider
            form_login:
                login_path: login
                check_path: login
                default_target_path: /
            logout:
                path: /logout
                target: /
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/post/new, roles: ROLE_ADMIN }
         - { path: ^/post/edit, roles: ROLE_ADMIN }
         - { path: ^/user, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
